
window.onload = function () {
    const preloader = document.querySelector('.preloader');
    const heartImage = document.getElementById('heartImage');
    const letterI = document.querySelector('.letter.i');
    const letterA = document.querySelector('.letter.a');

    setTimeout(() => {
        preloader.classList.add('show-main');
    }, 1000);

    // Отслеживаем окончание анимации букв
    let animationsEnded = 0;
    function checkAnimations() {
        animationsEnded++;
        if (animationsEnded === 2) {
            heartImage.src = "images/kankan.png"; // Меняем картинку
        }
    }

    letterI.addEventListener("animationend", checkAnimations);
    letterA.addEventListener("animationend", checkAnimations);

    setTimeout(() => {
        preloader.classList.add('hidden-main');
        setTimeout(() => {
            preloader.remove();
        }, 1000);
    }, 3000);
};







const calendarDays = document.getElementById('calendar-days');
const daysInMonth = 31;
const startDay = new Date(2025, 6, 1).getDay(); // Июль 2025

const adjustedStartDay = startDay === 0 ? 6 : startDay - 1; // Смещение для начала с Пн

// Добавляем пустые клетки перед 1-м числом месяца
for (let i = 0; i < adjustedStartDay; i++) {
    let emptyCell = document.createElement('div');
    emptyCell.classList.add('day', 'empty');
    calendarDays.appendChild(emptyCell);
}

// Добавляем дни месяца
for (let day = 1; day <= daysInMonth; day++) {
    let dayCell = document.createElement('div');
    dayCell.classList.add('day');
    dayCell.textContent = day;

    if (day === 12) { // Например, выделим 7 июля
        dayCell.classList.add('special');
        let heart = document.createElement('span');
        heart.classList.add('heart');
        heart.innerHTML = `
       <svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="400.000000pt" height="400.000000pt" viewBox="0 0 300.000000 300.000000" preserveAspectRatio="xMidYMid meet">
<metadata>
Created by potrace 1.10, written by Peter Selinger 2001-2011
</metadata>
<g transform="translate(0.000000,300.000000) scale(0.100000,-0.100000)" fill="#7a0f21" stroke="none">
<path d="M1934 2595 c-22 -7 -58 -22 -80 -33 -58 -29 -184 -131 -184 -148 0 -8 -5 -14 -11 -14 -19 0 -119 -144 -119 -173 0 -7 -7 -21 -15 -31 -13 -17 -15 -17 -21 -3 -3 9 -11 14 -17 10 -6 -3 -7 -1 -3 6 22 35 -133 207 -242 269 -72 41 -88 49 -172 82 -78 30 -233 38 -319 15 -72 -18 -133 -47 -160 -74 -10 -10 -43 -32 -74 -50 -31 -18 -64 -45 -74 -61 -9 -16 -20 -27 -25 -24 -4 3 -8 -4 -8 -15 0 -12 -4 -21 -9 -21 -10 0 -47 -90 -56 -139 -4 -20 -3 -36 4 -40 7 -5 6 -22 -5 -56 -9 -28 -17 -84 -19 -125 -2 -45 -1 -61 3 -40 6 31 10 21 30 -80 13 -63 30 -122 38 -131 8 -9 11 -18 8 -22 -6 -6 51 -123 90 -185 29 -46 135 -176 147 -180 28 -11 -10 50 -78 127 -12 14 -20 27 -18 29 2 3 43 -34 90 -82 47 -47 90 -86 95 -86 6 0 10 -6 10 -13 0 -7 29 -43 65 -79 43 -45 63 -72 59 -82 -4 -11 -1 -16 10 -16 9 0 16 -4 16 -10 0 -17 138 -153 148 -146 6 3 13 2 17 -4 3 -5 2 -10 -4 -10 -6 0 -8 -7 -4 -16 5 -13 7 -13 14 -2 7 10 9 9 9 -4 0 -10 7 -18 15 -18 9 0 18 -7 21 -15 4 -8 11 -12 17 -8 5 3 7 2 4 -3 -3 -6 17 -25 44 -43 27 -19 49 -39 49 -44 0 -6 8 -3 18 5 9 9 23 13 30 11 6 -3 12 3 12 12 0 9 -3 14 -7 12 -5 -3 -21 12 -37 32 -16 20 -48 51 -70 69 -23 19 -71 63 -108 98 -43 41 -68 59 -68 48 0 -10 -13 0 -36 27 -20 24 -58 67 -86 96 -28 28 -69 71 -91 95 -23 24 -37 37 -33 31 4 -7 2 -13 -3 -13 -6 0 -11 4 -11 8 0 5 -12 22 -26 38 -14 16 -38 47 -52 69 -15 22 -40 51 -55 64 -15 13 -26 26 -23 29 8 7 51 -36 91 -89 19 -26 44 -49 55 -52 28 -7 12 16 -87 119 -23 24 -40 44 -37 44 2 0 -5 18 -16 40 -11 22 -24 40 -28 40 -4 0 -16 20 -27 45 -11 25 -23 45 -27 45 -5 0 -8 12 -8 28 0 15 -5 34 -11 42 -7 11 -8 0 -4 -38 5 -49 37 -128 60 -144 6 -5 6 -8 -1 -8 -16 0 -39 30 -53 70 -7 19 -17 44 -23 56 -5 11 -10 36 -11 55 -1 19 -6 37 -10 40 -5 3 -8 41 -8 83 0 46 -4 76 -10 76 -6 0 -3 7 5 16 9 8 16 30 16 47 0 24 3 28 10 17 8 -12 10 -10 11 10 1 30 3 45 20 113 11 44 24 63 85 123 63 62 81 74 144 94 45 14 67 26 59 31 -7 4 -22 2 -33 -4 -12 -7 -26 -12 -31 -12 -22 -1 -122 -65 -162 -104 -24 -22 -43 -38 -43 -35 0 3 13 34 30 68 32 65 87 114 134 118 14 1 26 6 26 9 0 25 205 39 304 20 26 -5 46 -5 46 0 0 5 -10 9 -22 10 -13 0 -32 3 -43 6 -11 3 -48 8 -82 10 -55 4 -95 -1 -193 -24 -18 -4 -22 -3 -14 6 14 15 177 39 234 35 42 -4 44 -3 25 11 -11 9 -24 14 -31 11 -6 -2 -17 0 -25 5 -11 7 -10 9 4 9 28 0 161 -32 167 -40 3 -4 12 -10 20 -13 12 -4 11 -6 -3 -6 -27 -1 -10 -21 18 -21 13 0 26 -4 30 -10 3 -5 37 -26 75 -47 39 -21 70 -42 70 -47 0 -4 -11 -1 -25 8 -13 9 -28 16 -32 16 -7 0 8 -11 72 -52 23 -15 115 -106 115 -114 0 -4 12 -25 28 -48 15 -22 32 -52 38 -66 6 -14 20 -44 30 -67 11 -24 22 -43 26 -43 3 0 12 23 19 50 7 28 16 50 20 50 4 0 10 15 13 34 4 19 13 39 21 46 8 7 15 19 15 28 0 38 147 191 219 230 48 25 51 26 51 13 0 -5 -9 -13 -21 -16 -28 -9 -186 -162 -177 -171 4 -4 29 12 55 35 27 23 55 48 63 55 22 19 61 38 66 33 3 -3 -26 -27 -64 -55 -91 -66 -183 -182 -252 -320 -31 -60 -28 -62 -87 53 -62 121 -66 127 -98 168 -31 39 -129 108 -198 140 -38 17 -38 17 -32 -2 5 -16 2 -18 -17 -14 -13 2 1 -7 30 -21 67 -32 75 -33 37 -1 -55 45 -11 26 56 -25 93 -69 163 -157 211 -262 14 -31 36 -66 47 -77 12 -12 19 -26 16 -31 -4 -6 -2 -10 3 -10 5 0 27 33 47 73 47 89 141 221 189 265 19 17 37 32 40 32 2 0 17 12 34 28 35 32 142 76 225 92 66 13 161 7 239 -16 63 -19 74 -27 98 -73 11 -20 19 -29 20 -21 0 9 -5 21 -12 28 -25 25 2 22 39 -4 25 -19 48 -49 68 -90 17 -34 33 -60 37 -58 8 5 40 -89 45 -135 6 -56 5 -120 -3 -190 -6 -54 -5 -63 7 -56 12 8 12 6 0 -9 -8 -9 -16 -29 -17 -43 -2 -14 -7 -29 -12 -32 -12 -8 -43 -103 -31 -96 23 15 -10 -34 -73 -110 -5 -5 -6 6 -3 25 6 31 5 33 -6 15 -56 -91 -104 -158 -146 -202 -27 -29 -47 -53 -44 -53 4 0 -6 -11 -21 -24 -16 -13 -28 -27 -28 -31 0 -6 -37 -49 -102 -118 -16 -16 -28 -32 -28 -35 0 -14 -82 -92 -96 -92 -15 0 -19 -15 -6 -23 4 -2 2 -3 -4 -1 -12 2 -189 -183 -189 -200 -1 -6 -6 -10 -13 -8 -7 1 -11 -1 -10 -5 2 -5 -1 -9 -5 -10 -5 0 -22 -14 -38 -29 -16 -15 -31 -26 -33 -23 -5 5 53 69 197 219 141 146 219 232 214 236 -6 7 -337 -334 -428 -440 -72 -84 -118 -130 -124 -124 -4 4 20 36 54 71 33 35 61 69 61 76 0 8 7 11 16 7 8 -3 13 -2 10 3 -7 10 63 93 168 198 118 119 196 203 196 212 0 11 44 51 56 51 23 0 205 243 192 255 -3 3 -45 -43 -95 -103 -50 -59 -99 -116 -110 -127 -10 -11 -38 -43 -62 -70 -24 -28 -67 -75 -95 -105 -239 -258 -318 -343 -362 -393 l-50 -58 -60 67 c-32 38 -72 82 -88 99 -155 164 -204 207 -175 153 16 -30 35 -48 50 -48 7 0 10 -3 6 -6 -3 -3 34 -47 83 -97 151 -156 185 -197 165 -197 -2 0 -24 21 -47 46 -114 124 -164 167 -181 157 -7 -4 -15 -8 -19 -8 -21 0 -16 -16 8 -27 16 -7 41 -25 57 -40 15 -15 32 -28 37 -28 6 0 10 -8 9 -17 0 -11 -3 -13 -6 -5 -2 6 -18 12 -34 12 -20 0 -28 4 -23 11 5 8 1 8 -14 0 -24 -13 -33 -14 -30 -3 7 20 -189 212 -215 212 -11 0 -15 4 -11 12 4 6 0 16 -8 22 -38 28 -129 109 -215 191 -52 50 -98 90 -102 90 -10 0 -55 38 -66 54 -6 11 -4 13 9 8 10 -4 15 -3 11 3 -3 6 -11 10 -18 10 -6 0 -34 25 -62 55 -29 30 -50 55 -48 55 2 0 -16 24 -39 53 -73 89 -142 248 -154 355 -3 34 -11 62 -15 62 -30 0 23 -201 81 -306 47 -84 113 -175 195 -267 100 -113 272 -284 304 -303 17 -10 31 -23 31 -29 0 -14 125 -130 156 -144 14 -6 22 -16 19 -21 -3 -6 -1 -10 5 -10 6 0 8 -4 5 -10 -3 -6 -2 -10 4 -10 5 0 12 6 15 13 4 8 5 7 5 -3 -2 -33 2 -42 16 -36 8 3 15 0 15 -7 0 -7 25 -36 55 -66 30 -29 55 -56 55 -60 0 -3 39 -44 86 -91 47 -47 100 -102 116 -123 28 -35 32 -37 47 -22 10 8 23 15 29 15 7 0 12 4 12 8 0 5 30 40 68 79 37 39 85 90 107 114 23 24 72 78 110 119 39 42 93 102 120 134 28 33 63 71 80 85 29 26 81 80 182 190 29 31 79 85 113 121 33 35 60 68 60 72 0 5 8 16 18 26 26 27 82 111 82 123 0 6 4 8 9 5 4 -3 16 12 26 34 10 22 21 40 25 40 8 0 23 39 21 54 -1 5 5 16 13 25 28 31 63 188 66 300 2 62 -9 143 -19 137 -3 -3 -5 13 -3 34 5 55 -15 140 -49 210 -43 86 -118 149 -217 183 -42 15 -83 27 -91 27 -8 0 -43 13 -77 30 -107 51 -204 62 -290 35z m251 -33 c46 -25 23 -30 -32 -7 -39 16 -69 19 -76 8 -2 -5 -2 -2 0 6 3 11 -10 13 -69 8 -40 -4 -84 -9 -98 -12 -22 -5 -21 -3 5 10 46 24 217 15 270 -13z m-310 -11 c-7 -13 -67 -42 -73 -37 -5 5 58 46 71 46 5 0 6 -4 2 -9z m229 -22 c14 -13 -13 -39 -41 -39 -13 0 -44 -5 -68 -11 -52 -13 -83 -6 -42 10 15 6 30 19 34 28 4 10 11 21 17 25 13 9 87 -1 100 -13z m216 -24 c41 -4 136 -37 153 -54 6 -6 17 -11 24 -11 7 0 12 -4 10 -8 -1 -5 17 -28 41 -52 23 -24 42 -49 42 -57 0 -10 -54 43 -66 65 -1 1 -12 5 -24 7 -13 2 -33 13 -44 23 -42 38 -112 69 -143 65 -17 -3 -34 0 -37 6 -4 6 -16 11 -27 11 -10 0 -19 5 -19 11 0 7 10 9 28 4 15 -4 43 -9 62 -10z m-591 -95 c-35 -33 -65 -57 -68 -54 -7 7 104 114 119 114 6 0 -17 -27 -51 -60z m-1225 -22 c-16 -18 -32 -35 -36 -38 -11 -8 -49 -98 -65 -150 l-13 -45 5 45 c7 54 55 157 91 194 38 37 54 32 18 -6z m-23 -94 c-10 -27 -16 -55 -13 -63 3 -8 0 -11 -6 -7 -6 4 -16 -2 -21 -13 -16 -29 -13 -39 4 -17 17 23 19 15 6 -34 -6 -19 -15 -54 -21 -78 -6 -23 -15 -40 -20 -37 -6 4 -10 -16 -11 -47 -1 -29 -1 -66 -2 -83 0 -16 2 -55 6 -85 6 -44 5 -51 -5 -36 -17 30 -21 246 -4 266 14 16 24 56 31 125 5 55 20 99 45 136 30 41 33 33 11 -27z m2099 -656 c-21 -56 -148 -256 -188 -296 -13 -13 -20 -28 -15 -35 4 -7 0 -7 -10 2 -16 13 -16 15 3 31 11 10 20 22 20 27 0 6 9 18 20 28 11 10 32 39 47 64 14 25 29 48 32 51 3 3 20 32 36 65 67 134 93 163 55 63z m-151 -148 c-13 -22 -47 -72 -76 -111 -29 -39 -53 -74 -53 -79 0 -14 -19 -22 -32 -14 -8 5 -7 10 3 18 8 6 36 40 62 76 27 36 55 73 63 83 8 10 19 29 24 43 5 13 14 24 20 24 6 0 1 -18 -11 -40z m-130 -237 c-19 -26 -69 -73 -77 -73 -3 0 -1 5 6 12 7 7 12 18 12 26 0 10 -4 10 -16 -3 -9 -9 -19 -14 -22 -11 -8 9 49 50 77 57 15 4 28 7 30 8 2 0 -3 -7 -10 -16z m-93 -74 c3 -6 1 -15 -6 -19 -6 -4 -11 -11 -9 -16 1 -5 -6 -11 -17 -13 -10 -2 -22 -8 -26 -14 -4 -6 -10 -8 -14 -4 -4 4 7 20 24 36 16 16 28 32 24 35 -3 3 0 6 6 6 6 0 14 -5 18 -11z m-47 -96 c-13 -16 -39 -43 -56 -60 -18 -18 -33 -35 -33 -39 0 -7 -50 -61 -202 -218 -69 -72 -136 -142 -147 -156 -14 -17 -20 -20 -21 -10 0 8 32 49 71 90 39 41 94 100 122 131 153 166 273 289 281 289 5 0 -1 -12 -15 -27z m-1094 -56 c4 5 5 3 2 -3 -6 -11 82 -91 95 -87 5 2 7 -1 5 -6 -1 -5 13 -25 31 -45 66 -73 11 -33 -81 59 -53 52 -100 95 -105 95 -5 0 -9 7 -9 15 0 11 7 9 27 -10 14 -14 30 -22 35 -18z m685 -307 c0 -5 -4 -10 -8 -10 -9 0 -62 -99 -62 -116 0 -5 -22 -31 -50 -57 -51 -48 -58 -51 -40 -16 8 13 7 19 0 19 -14 0 -29 -41 -22 -59 5 -14 -14 -31 -36 -31 -20 0 -102 81 -102 100 0 10 -7 21 -16 24 -9 4 -14 9 -11 12 3 3 -11 21 -31 39 -21 19 -32 35 -26 35 6 0 30 -20 53 -45 23 -25 47 -45 53 -45 5 0 25 7 44 16 28 13 37 14 49 4 13 -11 21 -8 45 15 39 37 50 26 12 -13 -22 -22 -33 -27 -45 -20 -20 11 -22 3 -5 -16 26 -27 98 34 84 71 -7 18 22 56 35 47 5 -3 9 1 9 8 0 7 12 20 28 30 32 19 42 21 42 8z"/>
<path d="M966 2445 c18 -15 18 -15 0 -8 -13 4 -17 3 -12 -5 3 -6 14 -11 24 -11 9 1 27 -2 40 -6 13 -5 22 -3 22 3 0 7 11 8 32 1 18 -5 36 -5 41 0 12 12 -62 24 -76 13 -7 -5 -21 -6 -32 -1 -11 4 -14 8 -7 8 28 2 10 21 -20 21 -30 0 -31 -1 -12 -15z"/>
<path d="M2465 2265 c4 -11 10 -32 13 -47 2 -16 8 -28 12 -28 11 0 -9 72 -22 85 -8 7 -9 4 -3 -10z"/>
<path d="M2546 2135 c4 -33 8 -74 9 -91 4 -45 -20 -220 -38 -279 -8 -27 -18 -61 -22 -75 -15 -52 23 14 46 81 19 55 22 85 22 214 0 91 -4 162 -11 180 -10 26 -11 22 -6 -30z"/>
<path d="M2474 2027 c0 -99 -26 -248 -46 -274 -6 -7 -7 -24 -4 -39 4 -16 3 -23 -3 -20 -5 4 -12 2 -15 -3 -3 -5 1 -12 9 -15 10 -4 20 3 28 21 9 21 9 27 -1 31 -19 6 -14 18 12 30 16 7 27 24 34 54 10 38 9 41 -4 24 -8 -11 -14 -28 -14 -38 0 -10 -4 -18 -9 -18 -5 0 0 28 11 63 20 65 28 241 11 271 -5 8 -8 -29 -9 -87z"/>
<path d="M2504 2096 c2 -47 16 -58 16 -13 0 20 -4 38 -9 41 -5 3 -8 -10 -7 -28z"/>
<path d="M490 1939 c0 -31 12 -79 21 -79 9 0 1 57 -12 80 -7 13 -8 13 -9 -1z"/>
<path d="M521 1801 c-15 -9 -16 -21 -4 -30 4 -3 16 -22 25 -41 10 -19 23 -44 30 -55 69 -112 92 -145 113 -165 17 -16 25 -19 25 -9 0 12 2 11 10 -1 13 -20 12 -33 -2 -24 -7 4 -8 3 -4 -4 4 -7 14 -12 22 -12 8 0 14 -7 14 -16 0 -8 5 -12 10 -9 6 3 10 -3 10 -14 0 -22 14 -28 25 -11 9 15 -95 132 -111 126 -8 -3 -11 0 -8 8 4 10 -13 37 -64 101 -8 10 -28 52 -61 125 -12 27 -21 36 -30 31z"/>
<path d="M2473 1643 c-4 -10 -11 -21 -16 -24 -5 -3 -3 -9 5 -11 16 -7 41 39 27 48 -5 3 -12 -3 -16 -13z"/>
<path d="M2361 1578 c-5 -13 -7 -25 -4 -28 5 -6 33 30 33 42 0 17 -21 7 -29 -14z"/>
<path d="M1020 1144 c0 -21 28 -47 44 -41 19 8 28 -4 15 -19 -8 -9 -5 -15 10 -24 15 -7 21 -8 21 0 0 7 5 6 14 -2 7 -7 12 -18 9 -24 -5 -14 33 -47 49 -42 13 5 -137 168 -154 168 -4 0 -8 -7 -8 -16z"/>
</g>
</svg>
    `;
        dayCell.appendChild(heart);
    }

    calendarDays.appendChild(dayCell);
}




document.querySelector(".wedding-form").addEventListener("submit", async function (e) {
    e.preventDefault(); // Останавливаем стандартную отправку формы

    // 🔹 ЗАМЕНИТЬ НА СВОИ ДАННЫЕ!
    const TOKEN = "7644603205:AAHP68FDVDVowQhLnkeCxdqOR0565Pggtns";
    const CHAT_ID = "390335723";
    const API_URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

    const fieldNames = {
        attendance: "Присутствие",
        fullname: "Имя и фамилия",
        drink: "Предпочтение по напиткам",
        wishes: "Пожелания",
    };
    // Собираем данные из формы
    const formData = new FormData(this);
    let message = "<b>Новая заявка на свадьбу 🎉</b>\n\n";
    let drinks = [];

    for (let [key, value] of formData.entries()) {
        if (key === "drink") {
            drinks.push(value); // Добавляем в массив, не отправляем сразу
        } else {
            let fieldName = fieldNames[key] || key;
            message += `<b>${fieldName}:</b> ${value}\n`;
        }
    }
    if (drinks.length > 0) {
        message += `<b>Предпочтение по напиткам:</b> ${drinks.join(", ")}\n`;
    }
    // Отправляем запрос в Telegram
    const response = await fetch(API_URL, {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: "HTML",
        }),
    });
    console.log('Response:', response);
    if (response.ok) {
        alert("Форма успешно отправлена!");
        this.reset(); // Очистка формы
    } else {
        const errorText = await response.text();
        console.error('Error details:', errorText);
        alert("Ошибка при отправке. Попробуйте еще раз.");
    }
});
// document.querySelector(".wedding-form").addEventListener("submit", async function (e) {
//     e.preventDefault(); // Останавливаем стандартную отправку формы
//
//     // 🔹 ЗАМЕНИТЬ НА СВОИ ДАННЫЕ!
//     const TOKEN = "7644603205:AAHP68FDVDVowQhLnkeCxdqOR0565Pggtns";
//     const CHAT_ID = "390335723";
//     const API_URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;
//
//     // Собираем данные из формы
//     const formData = new FormData(this);
//     let message = "<b>Новая заявка на свадьбу 🎉</b>\n\n";
//
//     for (let [key, value] of formData.entries()) {
//         message += `<b>${key}:</b> ${value}\n`;
//     }
//
//     // Отправляем запрос в Telegram
//     const response = await fetch(API_URL, {
//         method: "POST",
//         headers: {"Content-Type": "application/json"},
//         body: JSON.stringify({
//             chat_id: CHAT_ID,
//             text: message,
//             parse_mode: "HTML",
//         }),
//     });
//
//     if (response.ok) {
//         alert("Форма успешно отправлена!");
//         this.reset(); // Очистка формы
//     } else {
//         alert("Ошибка при отправке. Попробуйте еще раз.");
//     }
// });

function startCountdown(targetDate) {
    function updateCountdown() {
        const now = new Date().getTime();
        const timeLeft = targetDate - now;

        if (timeLeft <= 0) {
            document.getElementById("countdown").innerHTML = "Событие началось!";
            clearInterval(interval);
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        document.getElementById("days").textContent = days;
        document.getElementById("hours").textContent = hours;
        document.getElementById("minutes").textContent = minutes;
        document.getElementById("seconds").textContent = seconds;
    }

    updateCountdown();
    const interval = setInterval(updateCountdown, 1000);
}

// Устанавливаем дату окончания
const targetDate = new Date("July 12, 2025 12:00:00").getTime();
startCountdown(targetDate);



document.addEventListener("DOMContentLoaded", () => {
    const hiddenElements = document.querySelectorAll(".hidden");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("show");
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    hiddenElements.forEach(element => observer.observe(element));
});
